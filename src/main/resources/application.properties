# Application Configuration
spring.application.name=TourplannerBackend
server.port=8080

# Database Configuration (Must-Have: PostgreSQL)
spring.datasource.url=jdbc:postgresql://localhost:5432/tourplanner
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration (Must-Have: O/R-Mapper)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Logging Configuration (Must-Have: Logging Framework)
logging.level.org.example.tourplannerbackend=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.file.name=logs/tourplanner-backend.log

# File Storage Configuration
file.basePath=./resources/images

# OpenRouteService API Configuration (Must-Have: OpenRouteService integration)
ors.api.key=5b3ce3597851110001cf6248baca1b8845374653bf8d82d8d80cfcd8
ors.api.url=https://api.openrouteservice.org/

# OpenStreetMap Configuration (Must-Have: OpenStreetMap integration)
osm.tile.url=https://tile.openstreetmap.org

# Jackson Configuration
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=UTC

# Validation Configuration
spring.web.resources.add-mappings=false

# CORS Configuration
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized

